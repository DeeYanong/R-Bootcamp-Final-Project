---
title: "Final Project - DnD Challenge Rating"
author: "Dee Yanong"
format: html
editor: visual
---

## Install/load Packages
Pacman package will load and auto-install (if missing) packages in one line
```{r}
#install.packages("pacman")

pacman::p_load(gtsummary, skimr, dplyr, readr, tidyverse, ggplot2, broom, data.table, stringr)
```

## Import D&D Dataset from Kaggle. Download the zip file: (https://www.kaggle.com/datasets/shadowtime2000/dungeons-dragons?resource=download)

General idea: Which monster stats best predicts challenge rating?

Read csv files: classes, equipment, monsters, races, spells

```{r}
#DnD <- unzip("C:/Users/deeya/OneDrive/Desktop/EMORY MPH/Thesis/R Bootcamp/R Bootcamp Final Project/DnD_Dataset.zip")

#classes <- read.csv("classes.csv")
#equipment <- read.csv("equipment.csv")
monsters <- read.csv("monsters.csv")
#races <- read.csv("races.csv")
#spells <- read.csv("spells.csv")

```
## Table 1 - use monsters dataset
- Explore dataset, then create Table 1. 
- Variables I want: size, type, armor_class, hit_points, hit_dice, strength, dexterity, constitution, intelligence, wisdom, charisma
- Check for normality: armor_class, charisma, constitution, dexterity, hit_points, intelligence, strength, wisdom
	- if bell-shaped use: ANOVA (aov)
	- if skewed use: Kruskal-Wallis (kruskal.test)
- Clean up data

```{r}
skimr::skim(monsters)
colnames(monsters)
lapply(monsters[c("armor_class","charisma","constitution","dexterity","hit_points","intelligence","strength","wisdom")],hist)

monster_clean <- monsters %>%
	mutate (dice_group = case_when(str_detect(hit_dice, "d6$") ~ "d6",
																 str_detect(hit_dice, "d8$") ~ "d8",
																 str_detect(hit_dice, "d10$") ~ "d10",
																 str_detect(hit_dice, "d12$") ~ "d12",
																 str_detect(hit_dice, "d20$") ~ "d20",
																 TRUE ~ "other"),
					armor_class = as.numeric(armor_class),
					charisma = as.numeric(charisma),
					constitution = as.numeric(constitution),
					dexterity = as.numeric(dexterity),
					hit_points = as.numeric(hit_points),
					intelligence = as.numeric(intelligence),
					strength = as.numeric(strength),
					wisdom = as.numeric(wisdom)) %>%
	select(size,type,armor_class,hit_points,dice_group,strength,dexterity,constitution,intelligence,wisdom,charisma)

monster_clean %>%
tbl_summary(by = size,
						include = c(type,armor_class,hit_points,dice_group,strength,dexterity,constitution,intelligence,wisdom,charisma),
						label = list(type ~ "Class Type",
												 armor_class ~ "Armor Class",
												 hit_points ~ "Hit Points",
												 dice_group ~ "Hit Dice",
												 strength ~ "Strength",
												 dexterity ~ "Dexterity",
												 constitution ~ "Constitution",
												 intelligence ~ "Intelligence",
												 wisdom ~ "Wisdom",
												 charisma ~ "Charisma")) %>%
	add_p(test = list(all_continuous() ~ "kruskal.test",
										all_categorical() ~ "chisq.test"),
				test.args = all_categorical() ~ list(simulate.p.value = TRUE)) %>%
	bold_labels()
	
```
